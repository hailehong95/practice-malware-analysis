md5                     6d8895c63a77ebe5e49b656bdefdb822
sha1                    de8fb0deb6a0ac1f621950270f0ee312357401d7
sha256                  fca62097b364b2f0338c5e4c5bac86134cedffa4f8ddf27ee9901734128952e3
path                    Malware.stage0.exe
timestamp               2022-08-07T15:15:28.592950
capa version            v3.2.0-0-gd9d72ad
os                      windows
format                  pe
arch                    i386
extractor               VivisectFeatureExtractor
base address            0x400000
rules                   /tmp/_MEIr42wqq/rules
function count          322
library function count  0
total feature count     14269

compiled with Nim
namespace  compiler/nim
author     michael.hunhoff@mandiant.com
scope      file
examples   580c37831fe98a254eb6c61c692c70d8.exe_
or:
  substring: NimMain
    - "@NimMainModule@0" @ 0x5DAB0
    - "_NimMain" @ 0x53AE2
    - "_NimMainInner" @ 0x5DA96
  substring: NimMainModule
    - "@NimMainModule@0" @ 0x5DAB0
  substring: NimMainInner
    - "_NimMainInner" @ 0x5DA96
  substring: io.nim
    - "io.nim" @ 0xAE49
    - "stdlib_io.nim.c" @ 0x51A8A
  substring: fatal.nim
    - "fatal.nim" @ 0xAE10, 0xB034
  substring: system.nim
    - "stdlib_system.nim.c" @ 0x5CA99

contains PDB path
namespace  executable/pe/pdb
author     moritz.raabe@mandiant.com
scope      file
examples   464EF2CA59782CE697BC329713698CCC
regex: /:\\.*\.pdb/
  - "C:\\Users\\Administrator\\source\\repos\\CRTInjectorConsole\\Release\\CRTInjectorConsole.pdb" @ 0xD404

contain a thread local storage (.tls) section
namespace  executable/pe/section/tls
author     michael.hunhoff@mandiant.com
scope      file
examples   Practical Malware Analysis Lab 16-02.exe_
section: .tls @ 0x41D000

contain an embedded PE file
namespace  executable/subfile/pe
author     moritz.raabe@mandiant.com
scope      file
mbc        Execution::Install Additional Program [B0023]
examples   Practical Malware Analysis Lab 01-04.exe_:0x4060
or:
  count(characteristic(embedded pe)): 1 or more @ 0xBE28

check if file exists
namespace  host-interaction/file-system/exists
author     moritz.raabe@mandiant.com
scope      function
att&ck     Discovery::File and Directory Discovery [T1083]
examples   31600AD0D1A7EA615690DF111AE36C73:0x401284
function @ 0x4059A9
  or:
    subscope:
      and:
        api: kernel32.GetLastError @ 0x4059F9
        mnemonic: cmp @ 0x405A05
        number: 0x2 = ERROR_FILE_NOT_FOUND @ 0x4059C1, 0x4059DF

read file on Windows (2 matches)
namespace  host-interaction/file-system/read
author     moritz.raabe@mandiant.com
scope      function
mbc        File System::Read File [C0051]
examples   BFB9B5391A13D0AFD787E87AB90F14F5:0x1314567B
function @ 0x40202E
  and:
    os: windows
    or:
      api: fread @ 0x40204E
function @ 0x406E09
  and:
    os: windows
    or:
      api: fread @ 0x40204E

write file on Windows (4 matches)
namespace  host-interaction/file-system/write
author     william.ballenthin@mandiant.com
scope      function
mbc        File System::Writes File [C0052]
examples   Practical Malware Analysis Lab 01-04.exe_:0x4011FC, 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x1400025C4
function @ 0x4026E5
  and:
    os: windows
    or:
      api: fwrite @ 0x402704
function @ 0x402814
  and:
    os: windows
    or:
      api: fwrite @ 0x402852
function @ 0x402AC5
  and:
    os: windows
    or:
      api: fwrite @ 0x402AF4
function @ 0x40A6D0
  and:
    os: windows
    or:
      api: fwrite @ 0x40A6FF

get thread local storage value
namespace  host-interaction/process
author     michael.hunhoff@mandiant.com
scope      function
function @ 0x40AD10
  and:
    api: kernel32.TlsGetValue @ 0x40AD45

allocate RWX memory
namespace  host-interaction/process/inject
author     moritz.raabe@mandiant.com
scope      basic block
mbc        Memory::Allocate Memory [C0007]
examples   Practical Malware Analysis Lab 03-03.exe_:0x4010EA, 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA
basic block @ 0x40A7E6 in function 0x40A730
  and:
    match: allocate memory @ 0x40A7E6
      or:
        api: kernel32.VirtualProtect @ 0x40A80D
    number: 0x40 = PAGE_EXECUTE_READWRITE @ 0x40A7FE

terminate process
namespace  host-interaction/process/terminate
author     moritz.raabe@mandiant.com
scope      function
mbc        Process::Terminate Process [C0018]
examples   C91887D861D9BD4A5872249B641BC9F9:0x401A77, 9B7CCAA2AE6A5B96E3110EBCBC4311F6:0x10010307
function @ 0x40A4B0
  and:
    or:
      api: kernel32.TerminateProcess @ 0x40A529



