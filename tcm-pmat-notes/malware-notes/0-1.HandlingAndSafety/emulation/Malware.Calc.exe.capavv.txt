md5                  041a28eda8a0b003ac54df9ef74d0069
sha1                 34a67f0cc557e2bb8c5b71ea619fb2df6c60816a
sha256               300bb9ac1f607f99e3fbc7814b42552913ef4bcd2d2752f0f909908ae3e46aaf
path                 Malware.Calc.exe.malz
timestamp            2022-08-03T09:48:49.118540
capa version         1.6.2
format               auto
extractor            VivisectFeatureExtractor
base address         0x400000
rules                /usr/local/share/capa-rules
function count       80
total feature count  5551

check for software breakpoints
namespace   anti-analysis/anti-debugging/debugger-detection
author      michael.hunhoff@fireeye.com
scope       function
mbc         Anti-Behavioral Analysis::Debugger Detection::Software Breakpoints [B0001.025]
references  https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/SoftwareBreakpoints.cpp
examples    al-khaser_x86.exe_:0x431020
function @ 0x405730
  and:
    subscope:
      and:
        mnemonic: cmp @ 0x4057B9
        or:
          number: 0xCC @ 0x405793
    match: contain loop @ 0x405730
      or:
        characteristic: loop @ 0x405730

64-bit execution via heavens gate (2 matches)
namespace    anti-analysis/anti-disasm
author       @recvfrom
description  Looks for instructions related to executing 64-bit code from a 32-bit process (Heaven's Gate)
scope        function
mbc          Defense Evasion::Disable or Evade Security Tools::Heavens Gate [F0004.008]
references   https://download.bitdefender.com/resources/files/News/CaseStudies/study/318/Bitdefender-TRR-Whitepaper-Maze-creat4351-en-EN-GenericUse.pdf, https://www.malwaretech.com/2014/02/the-0x33-segment-selector-heavens-gate.html
examples     79abd17391adc6251ecdc58d13d76baf:0x10002385
function @ 0x4060C0
  and:
    and:
      or:
        mnemonic: push = 'push 33h' @ 0x4060C8, 0x40610E, 0x4061E1, 0x40620A, and 5 more...
        mnemonic: mov = cover any mov ESP / EBP equivalents @ 0x4060C3, 0x4060C9, 0x4060CC, 0x4060D5, and 59 more...
      number: 0x33 = set up retf to push 0x33 to CS indicating 64-bit mode @ 0x406116, 0x406261
    mnemonic: call = 'call $+5' pushes the current EIP onto the stack, +5 to jump past call insn bytes @ 0x406397, 0x406414, 0x406425
    and:
      mnemonic: add = 'add dword ptr[esp], 5' updates the return address to point after retf @ 0x406125, 0x406146, 0x406160, 0x406185, and 22 more...
      number: 0x5 = length of add + retf insn bytes @ 0x40628B
    mnemonic: retf = set EIP = [ESP] and CS = [ESP+4] @ 0x40612D, 0x406164, 0x406168, 0x40623D, and 1 more...
function @ 0x40A5D0
  and:
    and:
      or:
        mnemonic: push = 'push 33h' @ 0x40A5D0, 0x40A5D6, 0x40A600, 0x40A601, and 14 more...
        mnemonic: mov = cover any mov ESP / EBP equivalents @ 0x40A5D1, 0x40A5D7, 0x40A5DD, 0x40A60C, and 50 more...
      number: 0x33 = set up retf to push 0x33 to CS indicating 64-bit mode @ 0x40A5E6
    mnemonic: call = 'call $+5' pushes the current EIP onto the stack, +5 to jump past call insn bytes @ 0x40A602, 0x40A62A, 0x40A655, 0x40A699, and 4 more...
    and:
      mnemonic: add = 'add dword ptr[esp], 5' updates the return address to point after retf @ 0x40A60A, 0x40A630, 0x40A63E, 0x40A65B, and 27 more...
      number: 0x5 = length of add + retf insn bytes @ 0x40A822
    mnemonic: retf = set EIP = [ESP] and CS = [ESP+4] @ 0x40A5EB

execute anti-VM instructions (32 matches)
namespace  anti-analysis/anti-vm/vm-detection
author     moritz.raabe@fireeye.com
scope      basic block
att&ck     Defense Evasion::Virtualization/Sandbox Evasion::System Checks [T1497.001]
mbc        Anti-Behavioral Analysis::Virtual Machine Detection::Instruction Testing [B0009.029]
examples   Practical Malware Analysis Lab 17-03.exe_:0x401A80
basic block @ 0x401E40
  or:
    mnemonic: in @ 0x401E44
basic block @ 0x403A1F
  or:
    mnemonic: in @ 0x403A23
basic block @ 0x403BDE
  or:
    mnemonic: in @ 0x403BDE
basic block @ 0x404920
  or:
    mnemonic: in @ 0x404932
basic block @ 0x404940
  or:
    mnemonic: in @ 0x404972
basic block @ 0x4049A9
  or:
    mnemonic: in @ 0x4049B0
basic block @ 0x405631
  or:
    mnemonic: in @ 0x405642
basic block @ 0x40563B
  or:
    mnemonic: in @ 0x405642
basic block @ 0x405D1D
  or:
    mnemonic: in @ 0x405D23
basic block @ 0x405D20
  or:
    mnemonic: in @ 0x405D23
basic block @ 0x405D96
  or:
    mnemonic: in @ 0x405D9C
basic block @ 0x405E50
  or:
    mnemonic: in @ 0x405E52
basic block @ 0x405F68
  or:
    mnemonic: in @ 0x405F70
basic block @ 0x4060C0
  or:
    mnemonic: in @ 0x4060C2
basic block @ 0x406216
  or:
    mnemonic: in @ 0x406219
basic block @ 0x40624E
  or:
    mnemonic: in @ 0x40626E
basic block @ 0x406301
  or:
    mnemonic: in @ 0x406320
basic block @ 0x406353
  or:
    mnemonic: in @ 0x406356
basic block @ 0x40638D
  or:
    mnemonic: in @ 0x4063A2
basic block @ 0x4063FA
  or:
    mnemonic: in @ 0x406406
basic block @ 0x40698A
  or:
    mnemonic: in @ 0x406990
basic block @ 0x406A00
  or:
    mnemonic: in @ 0x406A04
basic block @ 0x406B5D
  or:
    mnemonic: in @ 0x406B66
basic block @ 0x4077BC
  or:
    mnemonic: in @ 0x4077C2
basic block @ 0x407D71
  or:
    mnemonic: in @ 0x407D7C
basic block @ 0x408680
  or:
    mnemonic: in @ 0x408682
basic block @ 0x4086E0
  or:
    mnemonic: in @ 0x4086E2, 0x4086EB
basic block @ 0x4093FA
  or:
    mnemonic: in @ 0x4093FE, 0x409403
basic block @ 0x40A432
  or:
    mnemonic: in @ 0x40A432
basic block @ 0x40A6F4
  or:
    mnemonic: in @ 0x40A70B
basic block @ 0x40A9A0
  or:
    mnemonic: in @ 0x40A9A2
basic block @ 0x40ABF0
  or:
    mnemonic: in @ 0x40ABF4

reference Base64 string
namespace  data-manipulation/encoding/base64
author     moritz.raabe@fireeye.com
scope      file
att&ck     Defense Evasion::Obfuscated Files or Information [T1027]
mbc        Data::Encode Data::Base64 [C0026.001], Data::Check String [C0019]
examples   BFB9B5391A13D0AFD787E87AB90F14F5, 074072B261FC27B65C72671F13510C05, 5DB2D2BE20D59AA0BE6709A6850F1775
string: " !\"#$%&'()*+,-./0123@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" @ 0xC67F

encode data using XOR (3 matches)
namespace  data-manipulation/encoding/xor
author     moritz.raabe@fireeye.com
scope      basic block
att&ck     Defense Evasion::Obfuscated Files or Information [T1027]
mbc        Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02], Data::Encode Data::XOR [C0026.002]
examples   2D3EDC218A90F03089CC01715A9F047F:0x403D7E
basic block @ 0x406353
  and:
    characteristic: tight loop @ 0x406353
    characteristic: nzxor @ 0x406357
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x406618
  and:
    characteristic: tight loop @ 0x406618
    characteristic: nzxor @ 0x406623
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100
basic block @ 0x408102
  and:
    characteristic: tight loop @ 0x408102
    characteristic: nzxor @ 0x408113
    not:
      or:
        number: 0xFFFFFFFF
        number: 0xFFFFFFFFFFFFFFFF
        number: 0xFFFFFFF
        number: 0xFFFFFFFFFFFFFFF
        number: 0x7EFEFEFF
        number: 0x81010101
        number: 0x81010100
        number: 0x7EFEFEFEFEFEFEFF
        number: 0x8101010101010101
        number: 0x8101010101010100

encrypt data using RC4 PRGA
namespace  data-manipulation/encryption/rc4
author     moritz.raabe@fireeye.com
scope      function
att&ck     Defense Evasion::Obfuscated Files or Information [T1027]
mbc        Cryptography::Encrypt Data::RC4 [C0027.009], Cryptography::Generate Pseudo-random Sequence::RC4 PRGA [C0021.004]
examples   34404A3FB9804977C6AB86CB991FB130:0x403DB0, 34404A3FB9804977C6AB86CB991FB130:0x403E50, 9324D1A8AE37A36AE560C37448C9705A:0x4049F0, 73CE04892E5F39EC82B00C02FC04C70F:0x4064C6
function @ 0x40A9A0
  and:
    count(characteristic(nzxor)): 1 @ 0x40A9FB
    or:
      match: calculate modulo 256 via x86 assembly @ 0x40AA58, 0x40AA8E, 0x40AA9B
        and:
          mnemonic: and @ 0x40AA68, 0x40AA82, 0x40AAAA, 0x40AAB0, and 1 more...
          or:
            number: 0xFF @ 0x40AAAA
        and:
          mnemonic: and @ 0x40AAAA, 0x40AAB0, 0x40AAB2
          or:
            number: 0xFF @ 0x40AAA0, 0x40AAAA
        and:
          mnemonic: and @ 0x40AAAA, 0x40AAB0, 0x40AAB2
          or:
            number: 0xFF @ 0x40AAAA
    count(characteristic(calls from)): 4 or fewer @ -0x600047F0
    count(basicblock): 4 or more @ 0x40A9A0, 0x40A9B5, 0x40A9C0, 0x40A9C3, and 18 more...
    match: contain loop @ 0x40A9A0
      or:
        characteristic: loop @ 0x40A9A0
        characteristic: tight loop @ 0x40AADC
    optional:
      or:
        number: 0xFF @ 0x40AAA0, 0x40AAAA

contains PDB path
namespace  executable/pe/pdb
author     moritz.raabe@fireeye.com
scope      file
examples   464EF2CA59782CE697BC329713698CCC
string: "C:\\local0\\asf\\release\\build-2.2.14\\support\\Release\\ab.pdb" @ 0x12010

contain a resource (.rsrc) section
namespace  executable/pe/section/rsrc
author     moritz.raabe@fireeye.com
scope      file
examples   A933A1A402775CFA94B6BEE0963F4B46:0x41fd25
section: .rsrc @ 0x415000

check OS version
namespace  host-interaction/os/version
author     michael.hunhoff@fireeye.com, johnk3r
scope      function
att&ck     Discovery::System Information Discovery [T1082]
examples   493167E85E45363D09495D0841C30648:0x401000, 477743976643213d96b66ed5041a3b12:0x43CFF6
function @ 0x40A5D0
  and:
    or:
      api: GetVersionEx @ 0x40A741
    mnemonic: cmp @ 0x40A6F0, 0x40A761, 0x40A76B, 0x40A7B8, and 3 more...
    or:
      and:
        number: 0x5 @ 0x40A822
        optional:
          or:
            number: 0x0 @ 0x40A5DD, 0x40A6C4, 0x40A7AD, 0x40A845
            number: 0x1 @ 0x40A63A, 0x40A6B2
            number: 0x2 @ 0x40A7BD, 0x40A84E

access PEB ldr_data (2 matches)
namespace  linking/runtime-linking
author     moritz.raabe@fireeye.com
scope      basic block
att&ck     Execution::Shared Modules [T1129]
examples   3FDFB2D522E7DEECAAAF2F87420F7E75:0x4117B7
basic block @ 0x407110
  or:
    and:
      or:
        match: PEB access @ 0x407110
          or:
            characteristic: peb access @ 0x407110
            and:
              characteristic: fs access @ 0x407110
              or:
                offset/x32: 0x30 @ 0x407110
      offset/x32: 0xC = PEB.LDR_DATA @ 0x407114
      or:
        offset/x32: 0xC = PEB.LDR_DATA.InLoadOrderModuleList @ 0x407114
        offset/x32: 0x14 = PEB.LDR_DATA.InMemoryOrderModuleList @ 0x407118
basic block @ 0x4075A0
  or:
    and:
      or:
        match: PEB access @ 0x4075A0
          or:
            characteristic: peb access @ 0x4075B0
            and:
              characteristic: fs access @ 0x4075B0
              or:
                offset/x32: 0x30 @ 0x4075B0
      offset/x32: 0xC = PEB.LDR_DATA @ 0x4075B4
      or:
        offset/x32: 0xC = PEB.LDR_DATA.InLoadOrderModuleList @ 0x4075B4
        offset/x32: 0x14 = PEB.LDR_DATA.InMemoryOrderModuleList @ 0x4075B7

parse PE exports (3 matches)
namespace   load-code/pe
author      @Ana06
scope       function
references  Practical Malware Analysis, Chapter 19
examples    E4C33AC3638EEF68311F8AC0D72483C7:0x401390
function @ 0x401750
  and:
    offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew @ 0x4071E8
    or:
      offset/x32: 0x78 = IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory.VirtualAddress @ 0x40720E
    offset: 0x18 = IMAGE_EXPORT_DIRECTORY.NumberOfNames @ 0x407235
    offset: 0x20 = IMAGE_EXPORT_DIRECTORY.AddressOfNames @ 0x407243
    offset: 0x24 = IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals @ 0x407325, 0x407382
    offset: 0x1C = IMAGE_EXPORT_DIRECTORY.AddressOfFunctions @ 0x40733C
function @ 0x4019EA
  and:
    offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew @ 0x4071E8
    or:
      offset/x32: 0x78 = IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory.VirtualAddress @ 0x40720E
    offset: 0x18 = IMAGE_EXPORT_DIRECTORY.NumberOfNames @ 0x407235
    offset: 0x20 = IMAGE_EXPORT_DIRECTORY.AddressOfNames @ 0x407243
    offset: 0x24 = IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals @ 0x407325, 0x407382
    offset: 0x1C = IMAGE_EXPORT_DIRECTORY.AddressOfFunctions @ 0x40733C
function @ 0x4075A0
  and:
    offset: 0x3C = IMAGE_DOS_HEADER.e_lfanew @ 0x4075D6
    or:
      offset/x32: 0x78 = IMAGE_NT_HEADERS32.OptionalHeader.DataDirectory.VirtualAddress @ 0x4075D9
    offset: 0x18 = IMAGE_EXPORT_DIRECTORY.NumberOfNames @ 0x4075E7
    offset: 0x20 = IMAGE_EXPORT_DIRECTORY.AddressOfNames @ 0x4075E2
    offset: 0x24 = IMAGE_EXPORT_DIRECTORY.AddressOfNameOrdinals @ 0x407607, 0x40761A
    offset: 0x1C = IMAGE_EXPORT_DIRECTORY.AddressOfFunctions @ 0x407610



