md5                     b9497ffb7e9c6f49823b95851ec874e3
sha1                    6c8f50040545d8cd9af4b51564de654266e592e3
sha256                  3aca2a08cf296f1845d6171958ef0ffd1c8bdfc3e48bdd34a605cb1f7468213e
path                    unknown.exe
timestamp               2022-08-08T10:26:13.183850
capa version            v3.2.0-0-gd9d72ad
os                      windows
format                  pe
arch                    amd64
extractor               VivisectFeatureExtractor
base address            0x400000
rules                   /tmp/_MEI4tcLQ0/rules
function count          644
library function count  4
total feature count     29083

check for software breakpoints
namespace   anti-analysis/anti-debugging/debugger-detection
author      michael.hunhoff@mandiant.com
scope       function
mbc         Anti-Behavioral Analysis::Debugger Detection::Software Breakpoints [B0001.025]
references  https://github.com/LordNoteworthy/al-khaser/blob/master/al-khaser/AntiDebug/SoftwareBreakpoints.cpp
examples    al-khaser_x86.exe_:0x431020
function @ 0x414482
  and:
    subscope:
      and:
        mnemonic: cmp @ 0x41489B
        or:
          number: 0xCC @ 0x41489B
    match: contain loop @ 0x414482
      or:
        characteristic: loop @ 0x414482

compiled with Nim
namespace  compiler/nim
author     michael.hunhoff@mandiant.com
scope      file
examples   580c37831fe98a254eb6c61c692c70d8.exe_
or:
  substring: NimMain
    - "NimMain" @ 0x7541A
    - "NimMainInner" @ 0x84856
    - "NimMainModule" @ 0x8482B
  substring: NimMainModule
    - "NimMainModule" @ 0x8482B
  substring: NimMainInner
    - "NimMainInner" @ 0x84856
  substring: io.nim
    - "io.nim" @ 0x19349
    - "stdlib_io.nim.c" @ 0x6F7FE
  substring: fatal.nim
    - "fatal.nim" @ 0x192F0, 0x195F4
  substring: system.nim
    - "stdlib_system.nim.c" @ 0x8030E

validate payment card number using luhn algorithm
namespace  data-manipulation/checksum/luhn
author     @_re_fox
scope      function
mbc        Data::Checksum::Luhn [C0032.002]
examples   1d8fd13c890060464019c0f07b928b1a:0x401920, 6fcc13563aad936c7d0f3165351cb453:0x4026C0
function @ 0x4085FC
  or:
    match: validate payment card number using luhn algorithm with no lookup table @ 0x4085FC
      and:
        characteristic: loop = Iterate over CC digits @ 0x4085FC
        subscope:
          or:
            and: = Conversion of chr to int (SUB 0x30)
              number: 0x30 @ 0x4086CE
              mnemonic: sub @ 0x4086CE
          or:
            and: = Conversion of chr to int (SUB 0x30)
              number: 0x30 @ 0x408714
              mnemonic: sub @ 0x408714
        subscope:
          or:
            and: = Final section returning checkum % 10
              or:
                and:
                  mnemonic: idiv @ 0x408783
                  mnemonic: cdq @ 0x408781
              number: 0xA @ 0x408778
        or:
          and:
            subscope:
              and: = Compare number to 0x9 for Digital Root
                mnemonic: cmp @ 0x4086D1
                number: 0x9 @ 0x4086D1
              and: = Compare number to 0x9 for Digital Root
                mnemonic: cmp @ 0x408717
                number: 0x9 @ 0x408717
            subscope:
              or: = 2*Number for Digital Root
                mnemonic: add @ 0x4088F5
              or: = 2*Number for Digital Root
                and:
                  mnemonic: shl @ 0x40885F
                  number: 0x1 @ 0x40885A
              or: = 2*Number for Digital Root
                and:
                  mnemonic: shl @ 0x40875B
                  number: 0x1 @ 0x408756

encode data using Base64
namespace  data-manipulation/encoding/base64
author     moritz.raabe@mandiant.com
scope      function
att&ck     Defense Evasion::Obfuscated Files or Information [T1027]
mbc        Defense Evasion::Obfuscated Files or Information::Encoding-Standard Algorithm [E1027.m02], Data::Encode Data::Base64 [C0026.001]
examples   BFB9B5391A13D0AFD787E87AB90F14F5:0x1314889C, 074072B261FC27B65C72671F13510C05:0x100049B2, 5DB2D2BE20D59AA0BE6709A6850F1775:0x18001CC30, 08AC667C65D36D6542917655571E61C8:0x406EAA
function @ 0x409D0B
  and:
    mnemonic: shl @ 0x409E65, 0x409EA3, 0x40A05A, 0x40A13C, and 1 more...
    mnemonic: shr @ 0x409F26, 0x409F67, 0x409FAB, 0x40A099, and 4 more...
    number: 0x3F = modulo 64 @ 0x409F6A, 0x409FAE, 0x409FE0, 0x40A1FD
    match: contain loop @ 0x409D0B
      or:
        characteristic: loop @ 0x409D0B
    or:
      number: 0x3D = '=' @ 0x40A10D, 0x40A271
    optional:
      number: 0x2 @ 0x40A027
      number: 0x3 @ 0x409D8B, 0x409DE3, 0x40A013
      number: 0x6 @ 0x409D9B, 0x409FAB, 0x40A22F

reference Base64 string
namespace  data-manipulation/encoding/base64
author     moritz.raabe@mandiant.com
scope      file
att&ck     Defense Evasion::Obfuscated Files or Information [T1027]
mbc        Data::Encode Data::Base64 [C0026.001], Data::Check String [C0019]
examples   BFB9B5391A13D0AFD787E87AB90F14F5, 074072B261FC27B65C72671F13510C05, 5DB2D2BE20D59AA0BE6709A6850F1775
regex: /ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
  - "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/" @ 0x19F80

hash data using murmur3 (2 matches)
namespace   data-manipulation/hashing/murmur
author      william.ballenthin@mandiant.com
scope       function
mbc         Data::Non-Cryptographic Hash::MurmurHash [C0030.001]
references  https://github.com/aappleby/smhasher/blob/master/src/MurmurHash3.cpp
examples    c66172b12971a329f8d5ff01665f204b:0x404A18
function @ 0x40D730
  or:
    subscope:
      and: = hash >> 16; hash >> 13; hash >> 16
        number: 0x10 @ 0x40D895, 0x40D8AF
        number: 0xD @ 0x40D8A2
        count(mnemonic(shr)): 3 @ 0x40D895, 0x40D8A2, 0x40D8AF
        optional:
          count(characteristic(nzxor)): 3 or more @ 0x40D87A, 0x40D891, 0x40D898, 0x40D8A5, and 1 more...
    and:
      number: 0x85EBCA6B = 32-bit finalization mix constant 1 @ 0x40D89A
      number: 0xC2B2AE35 = 32-bit finalization mix constant 2 @ 0x40D8A7
    and:
      number: 0xCC9E2D51 = c1 32-bit hash @ 0x40D813, 0x40D868
      number: 0x1B873593 = c2 32-bit hash @ 0x40D821, 0x40D88B
    and:
      subscope:
        and: = k ROL r1
          mnemonic: rol @ 0x40D888
          number: 0xF = r1 @ 0x40D888
        and: = k ROL r1
          mnemonic: rol @ 0x40D81E, 0x40D829
          number: 0xF = r1 @ 0x40D81E
      subscope:
        and: = hash ROL r2
          mnemonic: rol @ 0x40D888
          number: 0xD = r2 @ 0x40D8A2
        and: = hash ROL r2
          mnemonic: rol @ 0x40D81E, 0x40D829
          number: 0xD = r2 @ 0x40D829
function @ 0x40D8DB
  or:
    subscope:
      and: = hash >> 16; hash >> 13; hash >> 16
        number: 0x10 @ 0x40D895, 0x40D8AF
        number: 0xD @ 0x40D8A2
        count(mnemonic(shr)): 3 @ 0x40D895, 0x40D8A2, 0x40D8AF
        optional:
          count(characteristic(nzxor)): 3 or more @ 0x40D87A, 0x40D891, 0x40D898, 0x40D8A5, and 1 more...
    and:
      number: 0x85EBCA6B = 32-bit finalization mix constant 1 @ 0x40D89A
      number: 0xC2B2AE35 = 32-bit finalization mix constant 2 @ 0x40D8A7
    and:
      number: 0xCC9E2D51 = c1 32-bit hash @ 0x40D813, 0x40D868
      number: 0x1B873593 = c2 32-bit hash @ 0x40D821, 0x40D88B
    and:
      subscope:
        and: = k ROL r1
          mnemonic: rol @ 0x40D888
          number: 0xF = r1 @ 0x40D888
        and: = k ROL r1
          mnemonic: rol @ 0x40D81E, 0x40D829
          number: 0xF = r1 @ 0x40D81E
      subscope:
        and: = hash ROL r2
          mnemonic: rol @ 0x40D888
          number: 0xD = r2 @ 0x40D8A2
        and: = hash ROL r2
          mnemonic: rol @ 0x40D81E, 0x40D829
          number: 0xD = r2 @ 0x40D829

contain a resource (.rsrc) section
namespace  executable/pe/section/rsrc
author     moritz.raabe@mandiant.com
scope      file
examples   A933A1A402775CFA94B6BEE0963F4B46:0x41fd25
section: .rsrc @ 0x43D000

contain a thread local storage (.tls) section
namespace  executable/pe/section/tls
author     michael.hunhoff@mandiant.com
scope      file
examples   Practical Malware Analysis Lab 16-02.exe_
section: .tls @ 0x43C000

query environment variable
namespace  host-interaction/environment-variable
author     michael.hunhoff@mandiant.com, @_re_fox
scope      function
att&ck     Discovery::System Information Discovery [T1082]
examples   Practical Malware Analysis Lab 14-02.exe_:0x401880, 0761142efbda6c4b1e801223de723578:0x65483490
function @ 0x40B372
  or:
    api: msvcrt.getenv @ 0x40B394

check if file exists
namespace  host-interaction/file-system/exists
author     moritz.raabe@mandiant.com
scope      function
att&ck     Discovery::File and Directory Discovery [T1083]
examples   31600AD0D1A7EA615690DF111AE36C73:0x401284
function @ 0x4068B2
  or:
    subscope:
      and:
        api: kernel32.GetLastError @ 0x4068FE
        mnemonic: cmp @ 0x406906
        number: 0x2 = ERROR_FILE_NOT_FOUND @ 0x4068CB, 0x4068E9

read file on Windows (2 matches)
namespace  host-interaction/file-system/read
author     moritz.raabe@mandiant.com
scope      function
mbc        File System::Read File [C0051]
examples   BFB9B5391A13D0AFD787E87AB90F14F5:0x1314567B
function @ 0x4024B0
  and:
    os: windows
    or:
      api: fread @ 0x4024C8
function @ 0x40BE37
  and:
    os: windows
    or:
      api: fread @ 0x4024C8

write file on Windows (4 matches)
namespace  host-interaction/file-system/write
author     william.ballenthin@mandiant.com
scope      function
mbc        File System::Writes File [C0052]
examples   Practical Malware Analysis Lab 01-04.exe_:0x4011FC, 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x1400025C4
function @ 0x402C1C
  and:
    os: windows
    or:
      api: fwrite @ 0x402C31
function @ 0x402D6B
  and:
    os: windows
    or:
      api: fwrite @ 0x402DB3
function @ 0x40346F
  and:
    os: windows
    or:
      api: fwrite @ 0x4034A1
function @ 0x418070
  and:
    os: windows
    or:
      api: fwrite @ 0x4180B2

get thread local storage value
namespace  host-interaction/process
author     michael.hunhoff@mandiant.com
scope      function
function @ 0x418AB0
  and:
    api: kernel32.TlsGetValue @ 0x418AE2

allocate RWX memory
namespace  host-interaction/process/inject
author     moritz.raabe@mandiant.com
scope      basic block
mbc        Memory::Allocate Memory [C0007]
examples   Practical Malware Analysis Lab 03-03.exe_:0x4010EA, 563653399B82CD443F120ECEFF836EA3678D4CF11D9B351BB737573C2D856299:0x140001ABA
basic block @ 0x418240 in function 0x4180E0
  and:
    match: allocate memory @ 0x418240
      or:
        api: kernel32.VirtualProtect @ 0x418262
    number: 0x40 = PAGE_EXECUTE_READWRITE @ 0x41824A

terminate process
namespace  host-interaction/process/terminate
author     moritz.raabe@mandiant.com
scope      function
mbc        Process::Terminate Process [C0018]
examples   C91887D861D9BD4A5872249B641BC9F9:0x401A77, 9B7CCAA2AE6A5B96E3110EBCBC4311F6:0x10010307
function @ 0x417D90
  and:
    or:
      api: kernel32.TerminateProcess @ 0x417E62

parse PE header (2 matches)
namespace  load-code/pe
author     moritz.raabe@mandiant.com
scope      function
att&ck     Execution::Shared Modules [T1129]
examples   9324D1A8AE37A36AE560C37448C9705A:0x403DD0
function @ 0x401010
  and:
    os: windows
    and:
      mnemonic: cmp @ 0x401051, 0x40105F, 0x4010A0, 0x4010C4, and 3 more...
      or:
        number: 0x4550 = IMAGE_NT_SIGNATURE (PE) @ 0x40105F
      or:
        number: 0x5A4D = IMAGE_DOS_SIGNATURE (MZ) @ 0x401051
function @ 0x418D30
  and:
    os: windows
    and:
      mnemonic: cmp @ 0x418D1A, 0x418D24, 0x418D30
      or:
        number: 0x4550 = IMAGE_NT_SIGNATURE (PE) @ 0x418D1A
      or:
        number: 0x5A4D = IMAGE_DOS_SIGNATURE (MZ) @ 0x418D30



